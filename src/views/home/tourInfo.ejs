<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        .content-input {
            border:none;  
            background-color:white;
        }
    </style>

    <script>

        // 데이터 조회해오기
        function read() {
            var select = document.getElementById("citySelect");
            var city = select.options[select.selectedIndex].value;
            var req = {
                city : city
            };
            fetch(`/getTourInfo`,{
                method : "POST",
                headers : {
                    "Content-Type" : "application/json"
                },
                body : JSON.stringify(req), // 제이슨형식을 문자열로
            })
            .then(res => res.json())
            //.then(res => console.log(res))
            .then(res => {setTable(res)})
            .catch(err => console.error(new Error("조회 중 에러발생")));
        }

        // 조회해온 데이터 테이블에 세팅
        function setTable(data) {
            var table = document.getElementById("tourTable");
            var tbody = document.getElementById("tbody");
            var rowCnt = table.rows.length;
            for (var i=0 ; i <rowCnt-1; i++) {
                table.deleteRow(-1);
            }
            if (data.length > 0) {
                for (var i = 0 ; i < data.length; i++) {
                    var tour = data[i];
                    console.log(tour.img);
                    
                    var view = `<tr>`;
                    view += `<td><input type='checkbox' class='check' onClick='toEdit(this)' id='${tour.city_code}-${tour.aid}'></td>
                    <td><p class='cityCode' value=${tour.city_code} >${tour.city_name}</p></td>
                    <td><p class='koreanName' value=${tour.korean_name} >${tour.korean_name}</p></td>
                    <td><p class='englishName' value=${tour.english_name} >${tour.english_name}</p></td>
                    <td><p class='price' value=${tour.price} >${tour.price}</p></td>
                    <td><p class='description' value=${tour.description} >${tour.description}</p></td>
                    <td><p class='dayOff' value=${tour.day_off} >${tour.day_off}</p></td>
                    <td><img class='image' src='${tour.img}' alt="엑박" style="width:100px; height:100px;"></td>
                    `
                    view += `</tr>`;

                    tbody.innerHTML += view;
                }
            }else {
                alert("조회된 내용이 없습니다.");
            }
        }

        // 행추가
        function addRow() {
            
            var table = document.getElementById("tourTable");

            const newRow = table.insertRow();
            newRow.insertCell(0).innerHTML = `<input type='checkbox' class='check'>`;
            newRow.insertCell(1).innerHTML = `<select class='cityCode'><option value='01'>서울</option><option value='02'>부산</option><option value='03'>제주</option></select>`;
            newRow.insertCell(2).innerHTML = `<input class='koreanName' type='text'>`;
            newRow.insertCell(3).innerHTML = `<input class='englishName' type='text'>`;
            newRow.insertCell(4).innerHTML = `<input class='price' type='text'>`;
            newRow.insertCell(5).innerHTML = `<input class='description' type='text'>`;
            newRow.insertCell(6).innerHTML = `<input class='dayOff' type='text'>`;
            newRow.insertCell(7).innerHTML = `<input class='image-input' type='file' onchange='setPreviewImg(this)'>`;
            newRow.insertCell(8).innerHTML = `<input class='cityName' hidden>`;
        }



        // 행삭제
        function deleteRow() {
            var checkBox = document.querySelectorAll(".check");
            var rowToDelete = new Array();
            for (var i = 0 ; i < checkBox.length; i++) {
                if (checkBox[i].checked) {
                    if (checkBox[i].id) {
                        alert("기존 데이터는 삭제버튼으로 삭제하세요");
                        break;
                    } else {
                        rowToDelete.push(i);
                    }
                }
            }
            if (rowToDelete.length > 0) {
                for (var i = 0 ; i < rowToDelete.length; i++) {
                    checkBox[rowToDelete[i]].parentElement.parentElement.remove();
                }
            }
        }

        // 데이터 수정
        async function updateTour() {
            var table = document.getElementById("tourTable");
            var rowList = table.rows;
            var updateData = new Array();

            for (var i = 1; i < rowList.length; i++) {
                // 조회된 데이터 중 체크된 행 (체크박스에 아이디가 부여되어있음)
                if (rowList[i].firstChild.firstChild.checked && rowList[i].firstChild.firstChild.id) {
                    console.log(rowList[i].children.length);
                    // 체크된 로우의 컬럼에 한번씩 접근
                    var tour = new Object();
                    for (var j = 0 ; j < rowList[i].children.length; j++) {
                        if (rowList[i].children[j].children.length > 1) { // 2개이상 (img가 있는 td)
                            for (var k = 0 ; k < rowList[i].children[j].children.length; k++) {
                                if (rowList[i].children[j].children[k].className == "image-input") { // 이미지파일
                                    var imgPath = await saveImg("save",rowList[i].children[j].children[k]);
                                    tour.image = imgPath.replaceAll('\\','/');
                                }
                            }
                        } else {
                            var content = rowList[i].children[j].firstChild;
                            var cityName = "";
                            if (content.className == "cityCode") { // select 일때
                                tour[content.className] = content.options[content.selectedIndex].value;
                                tour.cityName = content.options[content.selectedIndex].text;
                            } else if (content.className == "check") { // checkbox 일때
                                // aid 추출
                                tour.aid = content.id.split('-')[1];
                            } else { // input 일때
                                tour[content.className] = content.value;
                            }
                        }
                        
                    }
                    updateData.push(tour);
                }
            }
            console.log(updateData);

            if (updateData.length > 0) {
                fetch(`/updateTourInfo`,{
                    method : "POST",
                    headers : {
                        "Content-Type" : "application/json"
                    },
                    body : JSON.stringify(updateData), // 제이슨형식을 문자열로
                })
                .then(res => res.json())
                .then(res => {
                    console.log(res);
                    if (res.success) {
                        alert("데이터가 수정되었습니다.");
                        read(); // reload
                    }
                })
                .catch(err => console.error(new Error("삭제 중 에러발생")));
            }
        
        
        }

        // 로우를 체크/체크해제 했을 때
        function toEdit(e) {
            console.log(">>>toEdit")
            var tr = e.parentElement.parentElement; // 해당 로우에 해당하는 tr
            if (e.checked) { // 체크되었을 때
                for (var i = 0 ; i < tr.children.length; i++) {
                    var td = tr.children[i]; // input을 감싸는 td
                    if (td.firstChild.className == "cityCode") { // select option 부분
                        var selectedCity = td.firstChild.innerText;
                        td.firstChild.remove();
                        td.innerHTML = `<select class='cityCode'><option value ='01'>서울</option><option value ='02'>부산</option><option value ='03'>제주</option></select>`
                        for (var j = 0 ; j < td.firstChild.length; j++) {
                            if (td.firstChild.children[j].text == selectedCity) {
                                td.firstChild.children[j].selected = true;
                            }
                        } 
                    } else if (td.firstChild.className == "check") {
                        continue;
                    } else if (td.firstChild.className == "image") {
                        var src = td.firstChild.src;
                        td.innerHTML += `<input type='file' class='image-input' onchange="setPreviewImg(this)">`;
                        //td.innerHTML = `<input type='file' class=${className}>`;
                    } else { // input 텍스트부분
                        var text = td.firstChild.innerText;
                        var className = td.firstChild.className;
                        td.firstChild.remove();
                        td.innerHTML = `<input type='text' class=${className}>`;
                        td.firstChild.value = text;
                    }
                }
            } else { // 체크가 해제되었을 때
                console.log("체크해제")
                for (var i = 0 ; i < tr.children.length; i++) {
                    var td = tr.children[i]; // input을 감싸는 td
                    if (td.firstChild.className == "cityCode") { // select option 부분
                        var selectedCityName = td.firstChild.options[td.firstChild.selectedIndex].text;
                        console.log(selectedCityName);
                        td.firstChild.remove();
                        td.innerHTML = `<p class='cityCode'>${selectedCityName}</p>`;
                    } else if (td.firstChild.className == "check") {
                        continue;
                    } else { // input 텍스트부분
                        var text = td.firstChild.value;
                        var className = td.firstChild.className;
                        td.firstChild.remove();
                        td.innerHTML = `<p class='${className}'>${text}</p>`;
                    }
                }
            }
        }

        // 데이터 삭제
        function deleteTour() {
            var table = document.getElementById("tourTable");
            var rowList = table.rows;
            var deleteData = new Array();

            for (var i = 1; i < rowList.length; i++) {
                // 조회된 데이터 중 체크된 것
                if (rowList[i].firstChild.firstChild.checked && rowList[i].firstChild.firstChild.id) {
                    var id = rowList[i].firstChild.firstChild.id;
                    var tour = new Object();
                    tour.city_code = id.split('-')[0];
                    tour.aid = id.split('-')[1];
                    deleteData.push(tour);
                }
            }
            if (deleteData.length > 0) {
                fetch(`/deleteTourInfo`,{
                    method : "POST",
                    headers : {
                        "Content-Type" : "application/json"
                    },
                    body : JSON.stringify(deleteData), // 제이슨형식을 문자열로
                })
                .then(res => res.json())
                .then(res => {
                    if (res.success) {
                        read(); // reload
                    }
                })
                .catch(err => console.error(new Error("삭제 중 에러발생")));

            }
        }
        
        // 데이터 추가
        async function saveTour() {
            var table = document.getElementById("tourTable");
            var rowList = table.rows;

            var saveData = new Array();
            for (var i = 1; i < rowList.length; i++) { // thead 제외
                // 행추가 중 체크된 것
                if(rowList[i].firstChild.firstChild.checked && !rowList[i].firstChild.firstChild.id) {
                    var tour = new Object();
                    var cityName = "";
                    for (var j = 1 ; j < rowList[i].children.length; j++) {
                        console.log(rowList[i].children[j].firstChild.value);
                        if (rowList[i].children[j].firstChild.className == "image-input") { // 이미지파일의 경우
                            var imgPath = await saveImg("save",rowList[i].children[j].firstChild);
                            tour.image = imgPath.replaceAll('\\','/');
                        } else {
                            if (rowList[i].children[j].firstChild.className == "cityCode") {
                                var select = rowList[i].children[j].firstChild; // 저장하려는 행의 지역 select
                                cityName = select.options[select.selectedIndex].text; 
                            }
                            tour[rowList[i].children[j].firstChild.className] = rowList[i].children[j].firstChild.value
                        }
                    }
                    tour.cityName = cityName;
                    saveData.push(tour);
                }
            }

            if (saveData.length > 0) {
                if (saveValidation(saveData)) {
                    fetch(`/saveTourInfo`,{
                        method : "POST",
                        headers : {
                            "Content-Type" : "application/json"
                        },
                        body : JSON.stringify(saveData), // 제이슨형식을 문자열로
                    })
                    .then(res => res.json())
                    .then(res => {
                        if (res.success) {
                            read(); // reload
                        }
                    })
                    .catch(err => console.error(new Error("저장 중 에러발생")));
                }
            }
            
        }

        // 이미지 업로드시 미리보기 세팅
        async function setPreviewImg(event) {
            console.log(">>> setPreviewImg")
            
            const file = event.files[0];
            // 미리보기용 img가 있는지 확인
            if (event.parentElement.getElementsByClassName("image").length > 0) {
                event.parentElement.getElementsByClassName("image")[0].src = URL.createObjectURL(file);
            } else {
                const img = new Image();
                img.className = "image";
                img.src = URL.createObjectURL(file);
                img.style = "width:100px; height:100px;";
                event.parentElement.appendChild(img);
            }
            
        }

        // 이미지 파일 저장
        async function saveImg (type, input) {
            // type에는 저장 or 타입 구분이 들어있음
            // imgEvent에는 저장할 이미지 정보가 들어있음.
            const file = input.files[0];
            const formData = new FormData();
            formData.append("image",file);
            const path = await fetch("/saveImage", {
                method: "POST",
                body : formData,
            })
            .then(res => res.json())
            .then((res) => {
                if (res.success) {
                    return res.filePath.path;
                }
            })
            .catch(err => console.error(err));
            return path;
        }

        // 저장 정합성 확인
        function saveValidation(saveData) {
            for (var i = 0 ; i < saveData.length; i++) {
                if (!saveData[i].koreanName) {
                    alert("한글명을 입력하세요");
                    return null;
                } else if (!saveData[i].englishName) {
                    alert("영문명을 입력하세요");
                    return null;
                } else if (!saveData[i].price) {
                    saveData[i].price = 0;
                } else if (!saveData[i].description) {
                    alert("설명을 입력하세요");
                    return null;
                } else if (!saveData[i].dayOff) {
                    saveData[i].dayOff = "";
                } else if (!saveData[i].image) {
                    alert("이미지를 입력하세요");
                    return null;
                }
            }
            return saveData;
        }
    </script>
</head>

<body>
    <select id="citySelect">
        <option value="01">서울</option>
        <option value="02">부산</option>
        <option value="03">제주</option>
    </select>
    <button type="button" id="readBtn" onclick="read()">조회</button>
    <button type="button" id="saveBtn" onclick="saveTour()">저장</button>
    <button type="button" id="updateBtn" onclick="updateTour()">수정</button>
    <button type="button" id="deleteBtn" onclick="deleteTour()">삭제</button>
    <button typye="button" id="addRowBtn" onclick="addRow()">행추가</button>
    <button type="button" id="deleteRowBtn" onclick="deleteRow()">행삭제</button>
    <table id="tourTable">
        <thead>
            <tr>
                <th>선택</th>
                <th>지역</th>
                <th>한글명</th>
                <th>영문명</th>
                <th>금액</th>
                <th>설명</th>
                <th>휴무</th>
                <th>이미지</th>
            </tr>
        </thead>
        <tbody id="tbody"></tbody>
    </table>
</body>
</html>